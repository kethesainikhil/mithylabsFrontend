import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import addUserApi from './AddUserApi';

const initialState = {
    countValue: 0,
};
export const addUserAsync = createAsyncThunk(
  'user/addUserAsync',
  async (data) => {
    const res = await addUserApi(data)
    return res;
  }
);



export const addUserSlice = createSlice({
  name: 'user',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    increment: (state) => {
      state.countValue += 1;
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(addUserAsync.pending, (state) => {
        state.status = 'loading';

      })
      .addCase(addUserAsync.fulfilled, (state, action) => {
        state.status = 'idle';
        state.userDetails = action.payload

      })
  },
});

export const { increment } = addUserSlice.actions;

export default addUserSlice.reducer;